#define NULL 0
#define EOF  -1

/* FIXED 32 */
#define FRACTION_BITS_32 10
#define FRACTION_SIZE_32 (1 << FRACTION_BITS_32)

#define TO_FIXED_32(x)   (x * FRACTION_SIZE_32)
#define FROM_FIXED_32(x) (x / FRACTION_SIZE_32)

#define ADD_FIXED_32(x, y) (x + y)
#define SUB_FIXED_32(x, y) (x - y)

#define MUL_FIXED_32(x, y) ((x * y) >> FRACTION_BITS_32)
#define DIV_FIXED_32(x, y) ((x << FRACTION_BITS_32) / y)

/* FIXED 64 */
#define FRACTION_BITS_64 21
#define FRACTION_SIZE_64 (1 << FRACTION_BITS_64)

#define TO_FIXED_64(x)   (x * FRACTION_SIZE_64)
#define FROM_FIXED_64(x) (x / FRACTION_SIZE_64)

#define ADD_FIXED_64(x, y) (x + y)
#define SUB_FIXED_64(x, y) (x - y)

#define MUL_FIXED_64(x, y) ((x * y) >> FRACTION_BITS_64)
#define DIV_FIXED_64(x, y) ((x << FRACTION_BITS_64) / y)

#define SEEK_SET 0
#define SEEK_CUR 1
#define SEEK_END 2

typedef I32 F32;
typedef I64 F64;
typedef I32  FILE;

//extern FILE* stdin;
//extern FILE* stdout;

extern FILE* fopen(I8* fname, I8* mode);
extern I32 fgetc(FILE* file);
extern I32 fseek(FILE* file, I64 offset, I32 origin);
extern I32 fflush(FILE* file);

extern U0 printf(I8* fmt, ...);
extern U0 putchar(I8 c);
extern I32 atoi(I8* str);
extern I32 strcpy(I8* dst, I8* src);
extern I8 getchar(U0);